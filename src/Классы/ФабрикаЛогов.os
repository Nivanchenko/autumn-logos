#Использовать logos
#Использовать autumn

Перем НастройкиЛогов;
Перем Раскладки;
Перем _Поделка;

&Дуб
Процедура ПриСозданииОбъекта(
							&Деталька(Значение = "logos.logger", ЗначениеПоУмолчанию = Неопределено) НастройкиУровнейЛогов,
							&Пластилин Поделка
							)
	НастройкиЛогов = ?(НастройкиУровнейЛогов = Неопределено, Новый Соответствие(), НастройкиУровнейЛогов);
	_Поделка = Поделка;
	ЗаполнитьСоответствиеЛогаИРаскладки()
КонецПроцедуры

&Завязь
&Характер("Компанейский")
Функция Лог(&Блестяшка ИмяЛогаПолное, &Блестяшка ИмяЛога) Экспорт

	Лог = Логирование.ПолучитьЛог(ИмяЛогаПолное);
	
	ЗаполнитьРаскладку(Лог, ИмяЛога);

	Возврат Лог;

КонецФункции

Процедура ЗаполнитьРаскладку(Лог, ИмяЛога)
	ИмяКласса = Раскладки.Получить(ИмяЛога);

	Если Не ИмяКласса = Неопределено Тогда
		Лог.УстановитьРаскладку(_Поделка.НайтиЖелудь(ИмяКласса));
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСоответствиеЛогаИРаскладки()

	Раскладки = Новый Соответствие();

	Для Каждого ТекущийЛог Из НастройкиЛогов Цикл
		Если НЕ ТипЗнч(ТекущийЛог.Значение) = Тип("Строка") Тогда
			ИмяКласса = ТекущийЛог.Значение["classlayout"];

			Если НЕ ИмяКласса = Неопределено Тогда
				Раскладки.Вставить(НРег(ТекущийЛог.Ключ), ИмяКласса);
			КонецЕсли;

			ШаблонРаскладки = ТекущийЛог.Значение["stringlayout"];

			Если НЕ ШаблонРаскладки = Неопределено Тогда
				Раскладки.Вставить(НРег(ТекущийЛог.Ключ), СтрЗаменить(ТекущийЛог.Ключ, ".", ""));
			КонецЕсли;

		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

